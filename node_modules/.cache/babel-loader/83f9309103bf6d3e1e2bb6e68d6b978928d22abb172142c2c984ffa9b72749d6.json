{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/CreateDeck/CreateDeckForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, createDeck, readDeck, updateDeck } from \"../../utils/api/index\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateDeckForm() {\n  _s();\n  const history = useHistory();\n  /* set initial form properties to blank value */\n  const initialFormState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setformData] = useState({\n    ...initialFormState\n  }); /* Set form state to blank object*/\n\n  /* add new formdata to existing data */\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setformData({\n      ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  /* handle submit event */\n  async function handleSubmit(event) {\n    event.preventDefault(); /* prevents page refresh */\n    try {\n      const abortController = new AbortController();\n      const response = await createDeck({\n        ...formData\n      }, {\n        signal: abortController.signal\n      });\n      history.push(\"/\");\n      setformData(response);\n      return response;\n    } catch (error) {\n      if (error.message === \"AbortError\") {\n        return \"Aborted\";\n      } else {\n        throw error;\n      }\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Deck Name\",\n            onChange: handleChange,\n            value: formData.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Brief description of the deck\",\n            onChange: handleChange,\n            value: formData.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            value: \"Submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CreateDeckForm, \"6yldusUPQA3KjtDJILJ1sgQEr/0=\", false, function () {\n  return [useHistory];\n});\n_c = CreateDeckForm;\nexport default CreateDeckForm;\nvar _c;\n$RefreshReg$(_c, \"CreateDeckForm\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","createDeck","readDeck","updateDeck","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateDeckForm","_s","history","initialFormState","name","description","formData","setformData","handleChange","_ref","target","value","handleSubmit","event","preventDefault","abortController","AbortController","response","signal","push","error","message","children","onSubmit","htmlFor","id","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/CreateDeck/CreateDeckForm.js"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport {listDecks, createDeck, readDeck, updateDeck} from \"../../utils/api/index\"\nimport {useHistory} from \"react-router-dom\";\n\nfunction CreateDeckForm(){\n    const history = useHistory(); \n    /* set initial form properties to blank value */\n    const initialFormState = { \n        name: \"\",\n        description: \"\",\n      };\n    const [formData, setformData] = useState({ ...initialFormState }); /* Set form state to blank object*/\n\n    /* add new formdata to existing data */\n    const handleChange = ({ target }) => {\n        setformData({\n          ...formData,\n          [target.name]: target.value,\n        });\n      };\n    \n /* handle submit event */\n      async function handleSubmit(event){\n        event.preventDefault();  /* prevents page refresh */\n        try{\n            const abortController = new AbortController();\n            const response = await createDeck({ ...formData }, {signal: abortController.signal})\n            history.push(\"/\");\n            setformData(response);\n            return response;\n        }catch(error){\n            if(error.message === \"AbortError\"){\n                return \"Aborted\";\n            }\n            else{\n                throw error\n            }\n        }\n    };\n\n    return (\n        <>\n        <div>\n        <form onSubmit={handleSubmit}>\n              <label htmlFor=\"name\">\n              Name\n            <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Deck Name\"\n                onChange={handleChange}\n                value={formData.value}\n                \n            />   \n            </label>\n            <label htmlFor=\"description\">\n            Description\n            <textarea\n                id=\"description\"\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Brief description of the deck\"\n                onChange={handleChange}\n                value={formData.value}\n                \n            />   \n            \n            <button>Cancel</button>\n            <button type=\"submit\" value=\"Submit\">Submit</button>\n            \n            </label>\n\n        </form>\n        </div>\n        </>\n    )\n}\n\n\nexport default CreateDeckForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}