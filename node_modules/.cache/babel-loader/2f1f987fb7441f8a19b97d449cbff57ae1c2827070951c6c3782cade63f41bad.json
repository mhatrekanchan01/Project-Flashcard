{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/CreateDeck/CreateDeckForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, createDeck, readDeck, updateDeck } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateDeckForm() {\n  _s();\n  const initialFormState = {\n    name: \"\",\n    email: \"\"\n  };\n  const [formData, setformData] = useState({\n    ...initialFormState\n  }); /* Set form state to blank array*/\n  const onChange = event => setformData(event.target.value);\n  const createNewDeckForm = newValue => {\n    setformData(currentValue => [...currentValue, newValue]);\n    console.log(formData);\n  };\n  useEffect(() => {\n    async function createNewDeck() {\n      const createNewDeck = await createDeck(); /* data already fetched from api*/\n      createNewDeckForm(createNewDeck); /* update blank array of deck to deck data fetched from api*/\n    }\n\n    createNewDeck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Deck Name\",\n        onChange: onChange,\n        value: formData.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Brief description of the deck\",\n        onChange: onChange,\n        value: formData.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateDeckForm, \"ZFr3MnRPCJf29lEsKVnstqVNA2M=\");\n_c = CreateDeckForm;\nexport default CreateDeckForm;\nvar _c;\n$RefreshReg$(_c, \"CreateDeckForm\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","createDeck","readDeck","updateDeck","jsxDEV","_jsxDEV","CreateDeckForm","_s","initialFormState","name","email","formData","setformData","onChange","event","target","value","createNewDeckForm","newValue","currentValue","console","log","createNewDeck","onSubmit","submitHandler","children","htmlFor","id","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/CreateDeck/CreateDeckForm.js"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport {listDecks, createDeck, readDeck, updateDeck} from \"../../utils/api/index\"\n\nfunction CreateDeckForm(){\n    const initialFormState = {\n        name: \"\",\n        email: \"\",\n      };\n    const [formData, setformData] = useState({ ...initialFormState }); /* Set form state to blank array*/\n    const onChange = (event) => setformData(event.target.value);\n    \n    const createNewDeckForm = (newValue) => {\n        setformData((currentValue) => [...currentValue, newValue]) ;\n        console.log(formData);\n    }\n\n   \n\n    useEffect(() => {\n        async function createNewDeck(){\n          \n          const createNewDeck = await createDeck(); /* data already fetched from api*/\n          createNewDeckForm(createNewDeck); /* update blank array of deck to deck data fetched from api*/\n         \n        }\n        createNewDeck()\n      }, [])\n\n    return (\n        <form onSubmit={submitHandler}>\n              <label htmlFor=\"name\">\n              Name\n            <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Deck Name\"\n                onChange={onChange}\n                value={formData.value}\n                \n            />   \n            </label>\n            <label htmlFor=\"description\">\n            Description\n            <textarea\n                id=\"description\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Brief description of the deck\"\n                onChange={onChange}\n                value={formData.value}\n                \n            />   \n            \n            <button>Cancel</button>\n            <button type=\"submit\" value=\"Submit\">Submit</button>\n            </label>\n\n        </form>\n    )\n}\n\n\nexport default CreateDeckForm;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,QAAO,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjF,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EACrB,MAAMC,gBAAgB,GAAG;IACrBC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC;EACH,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IAAE,GAAGS;EAAiB,CAAC,CAAC,CAAC,CAAC;EACnE,MAAMK,QAAQ,GAAIC,KAAK,IAAKF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE3D,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;IACpCN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,QAAQ,CAAC,CAAC;IAC1DE,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EACzB,CAAC;EAIDb,SAAS,CAAC,MAAM;IACZ,eAAewB,aAAaA,CAAA,EAAE;MAE5B,MAAMA,aAAa,GAAG,MAAMrB,UAAU,EAAE,CAAC,CAAC;MAC1CgB,iBAAiB,CAACK,aAAa,CAAC,CAAC,CAAC;IAEpC;;IACAA,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAER,oBACIjB,OAAA;IAAMkB,QAAQ,EAAEC,aAAc;IAAAC,QAAA,gBACxBpB,OAAA;MAAOqB,OAAO,EAAC,MAAM;MAAAD,QAAA,GAAC,MAExB,eAAApB,OAAA;QACIsB,EAAE,EAAC,MAAM;QACTC,IAAI,EAAC,MAAM;QACXnB,IAAI,EAAC,MAAM;QACXoB,WAAW,EAAC,WAAW;QACvBhB,QAAQ,EAAEA,QAAS;QACnBG,KAAK,EAAEL,QAAQ,CAACK;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAExB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eACR5B,OAAA;MAAOqB,OAAO,EAAC,aAAa;MAAAD,QAAA,GAAC,aAE7B,eAAApB,OAAA;QACIsB,EAAE,EAAC,aAAa;QAChBC,IAAI,EAAC,MAAM;QACXnB,IAAI,EAAC,MAAM;QACXoB,WAAW,EAAC,+BAA+B;QAC3ChB,QAAQ,EAAEA,QAAS;QACnBG,KAAK,EAAEL,QAAQ,CAACK;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAExB,eAEF5B,OAAA;QAAAoB,QAAA,EAAQ;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACvB5B,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAACZ,KAAK,EAAC,QAAQ;QAAAS,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEL;AAEf;AAAC1B,EAAA,CAzDQD,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA4DvB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}