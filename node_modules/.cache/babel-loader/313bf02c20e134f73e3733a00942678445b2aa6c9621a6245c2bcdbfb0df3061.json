{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, createDeck, readDeck, updateDeck } from \"../../utils/api/index\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Deck() {\n  _s();\n  const history = useHistory();\n  const [map, setMap] = useState(false); /* Set state to blank array*/\n\n  const change = () => {\n    setMap(() => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  for: \"exampleFormControlInput1\",\n                  children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"exampleFormControlInput1\",\n                    type: \"text\",\n                    name: \"name\",\n                    class: \"container-fluid\",\n                    placeholder: \"Deck Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 20,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  for: \"exampleFormControlTextarea1\",\n                  children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"exampleFormControlTextarea1\",\n                    type: \"text\",\n                    name: \"description\",\n                    class: \"container-fluid\",\n                    rows: \"3\",\n                    placeholder: \"Brief description of the deck\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    });\n  };\n\n  //useEffect(() => {\n  //  async function fetchList(){\n  //   const findDeck = await listDecks(); /* data already fetched from api*/\n  // setMap(findDeck); /* update blank array of deck to deck data fetched from api*/\n  //  }\n  // fetchList()\n  // }, [])\n\n  console.log(map);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onChange: change,\n        children: \" Click me \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), map]\n  }, void 0, true);\n}\n_s(Deck, \"kRxg3xadOTfQkPghzGcxo9nkKjo=\", false, function () {\n  return [useHistory];\n});\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","createDeck","readDeck","updateDeck","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","Deck","_s","history","map","setMap","change","children","class","htmlFor","for","id","type","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","console","log","onChange","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {listDecks, createDeck, readDeck, updateDeck} from \"../../utils/api/index\"\nimport {useHistory} from \"react-router-dom\";\n\nfunction Deck(){\n\n    const history = useHistory();\n    const [map, setMap] = useState(false); /* Set state to blank array*/\n\n    \n    const change = () => {setMap(() => \n        {return (\n            <>\n            <form >\n                <table>\n                    <tr>\n                            <div class=\"form-group\">\n                                <label htmlFor=\"name\" for=\"exampleFormControlInput1\">\n                                    Name\n                                    <input\n                                    id=\"exampleFormControlInput1\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    class=\"container-fluid\"\n                                    placeholder=\"Deck Name\"    \n                                    />   \n                                </label>\n                            </div>    \n                    </tr>\n                    <tr>\n                            <div class=\"form-group\">\n                                <label htmlFor=\"description\" for=\"exampleFormControlTextarea1\">\n                                    Description\n                                    <textarea\n                                    id=\"exampleFormControlTextarea1\"\n                                    type=\"text\"\n                                    name=\"description\"\n                                    class=\"container-fluid\" rows=\"3\"\n                                    placeholder=\"Brief description of the deck\"   \n                                /> \n                                </label>\n                            </div>    \n                    </tr>\n                    </table>\n                    </form> \n            </>\n\n                 )\n        }\n                        )\n        \n    }\n\n\n\n    //useEffect(() => {\n    //  async function fetchList(){\n     //   const findDeck = await listDecks(); /* data already fetched from api*/\n       // setMap(findDeck); /* update blank array of deck to deck data fetched from api*/\n    //  }\n     // fetchList()\n   // }, [])\n\n    console.log(map);\n\n\n    return (\n        <>\n        <div>\n        <button onChange={change} > Click me </button>\n       \n        </div>\n        {map}\n        </>\n        \n    )\n\n}\n\n\nexport default Deck;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}