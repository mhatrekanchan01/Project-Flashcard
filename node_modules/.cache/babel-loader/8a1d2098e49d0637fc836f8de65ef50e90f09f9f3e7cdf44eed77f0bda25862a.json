{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/DeckList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, deleteDeck, readDeck } from \"../../utils/api/index\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport SingleDeckView from \"./SingleDeckView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Deck() {\n  _s();\n  const history = useHistory();\n  const [deckListing, setDeckListing] = useState([]);\n  useEffect(() => {\n    async function deckDashBoard() {\n      const fetch = await listDecks();\n      setDeckListing(fetch);\n    }\n    deckDashBoard();\n  }, []);\n\n  //  console.log(deckListing); \n\n  const readDeck = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  };\n\n  //const deleteDeck = (indexToDelete) => {\n  //  setDeckListing((currentDeck) => currentDeck.filter((post, id) => id !== indexToDelete))\n  // }\n\n  function DeckMap() {\n    return deckListing.map((currentDeck, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"card-title\",\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [currentDeck.name, `${currentDeck.cards.length}`, \" cards\"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"card-text\",\n                  children: `${currentDeck.description}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${currentDeck.id}`,\n                onClick: readDeck,\n                className: \"btn btn-secondary\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${currentDeck.id}/study`,\n                type: \"button\",\n                className: \"btn btn-primary\",\n                children: \"Study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  return deleteDeck(currentDeck.id);\n                },\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 23\n        }, this)\n      }, void 0, false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DeckMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Deck, \"aaNzn+jelGHJ700alwfmJEDyxXM=\", false, function () {\n  return [useHistory];\n});\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","deleteDeck","readDeck","useHistory","Link","SingleDeckView","jsxDEV","_jsxDEV","Fragment","_Fragment","Deck","_s","history","deckListing","setDeckListing","deckDashBoard","fetch","children","fileName","_jsxFileName","lineNumber","columnNumber","DeckMap","map","currentDeck","index","className","name","cards","length","description","to","id","onClick","type","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/DeckList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {listDecks, deleteDeck, readDeck} from \"../../utils/api/index\"\nimport {useHistory, Link} from \"react-router-dom\";\nimport SingleDeckView from \"./SingleDeckView\";\n\nfunction Deck(){\n    \n    const history = useHistory();\n    const [deckListing, setDeckListing] = useState([]);\n    \nuseEffect(() => {\n   async function deckDashBoard(){\nconst fetch = await listDecks();\n setDeckListing(fetch);  \n}\ndeckDashBoard();\n}, [])\n\n//  console.log(deckListing); \n\n    const readDeck = () => {\n        return (\n            <p>Name</p>\n        )\n    }\n\n    \n\n    //const deleteDeck = (indexToDelete) => {\n      //  setDeckListing((currentDeck) => currentDeck.filter((post, id) => id !== indexToDelete))\n   // }\n    \n    function DeckMap(){\n        \n        return (deckListing.map((currentDeck, index) => {\n            \n                return (\n\n                    <>\n                      <div>\n                      \n                      <table>\n                          <thead>\n                                  <tr>\n                                      <th className=\"card-title\">\n                                        <li key={index}>{currentDeck.name} \n                                      {`${currentDeck.cards.length}`} cards\n                                      </li>\n                                      </th>\n                                  </tr>\n                          </thead>\n                          <tbody>   \n                              <tr>\n                                  <td className=\"card-text\">\n                                  {`${currentDeck.description}`}\n                                  </td>\n                              </tr>\n                              </tbody>\n                        </table>      \n                              <tr>\n                                  <td>\n                                      <Link to={`/decks/${currentDeck.id}`} onClick={readDeck}className=\"btn btn-secondary\">View</Link>\n                                      \n                                      <Link to={`/decks/${currentDeck.id}/study`} type=\"button\" className=\"btn btn-primary\">Study</Link>\n                                  </td>\n                                  <td>\n                                      <button onClick={() => {\n                                       return deleteDeck(currentDeck.id);\n                                       \n                                    }} className=\"btn btn-danger\">Delete</button>\n                                  </td>\n                              </tr>      \n                  </div>\n              </>\n              )     \n         } )\n         )}\n\n\n    return (\n        <>\n        <DeckMap />\n        \n        </>\n                \n    )\n    \n}\n\n\nexport default Deck;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}