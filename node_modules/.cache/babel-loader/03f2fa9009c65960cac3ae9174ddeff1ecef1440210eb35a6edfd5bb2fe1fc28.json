{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, createDeck, readDeck, updateDeck } from \"../../utils/api/index\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deck() {\n  _s();\n  const history = useHistory();\n  const [map, setMap] = useState([]); /* Set state to blank array*/\n\n  const change = () => {\n    setMap([...map]);\n  };\n\n  //useEffect(() => {\n  //  async function fetchList(){\n  //   const findDeck = await listDecks(); /* data already fetched from api*/\n  // setMap(findDeck); /* update blank array of deck to deck data fetched from api*/\n  //  }\n  // fetchList()\n  // }, [])\n\n  console.log(map);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \" Click me \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Deck, \"NGikqDgp4P1Ds9l7tZK3w5QTk6o=\", false, function () {\n  return [useHistory];\n});\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","createDeck","readDeck","updateDeck","useHistory","jsxDEV","_jsxDEV","Deck","_s","history","map","setMap","change","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {listDecks, createDeck, readDeck, updateDeck} from \"../../utils/api/index\"\nimport {useHistory} from \"react-router-dom\";\n\nfunction Deck(){\n\n    const history = useHistory();\n    const [map, setMap] = useState([]); /* Set state to blank array*/\n\n    const change = () => {\n        setMap([...map])\n    }\n\n    //useEffect(() => {\n    //  async function fetchList(){\n     //   const findDeck = await listDecks(); /* data already fetched from api*/\n       // setMap(findDeck); /* update blank array of deck to deck data fetched from api*/\n    //  }\n     // fetchList()\n   // }, [])\n\n    console.log(map);\n\n\n    return (\n        <button > Click me </button>\n    )\n\n}\n\n\nexport default Deck;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,QAAO,uBAAuB;AACjF,SAAQC,UAAU,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAEX,MAAMC,OAAO,GAAGL,UAAU,EAAE;EAC5B,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpC,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACjBD,MAAM,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC;EACpB,CAAC;;EAED;EACA;EACC;EACE;EACH;EACC;EACF;;EAECG,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;EAGhB,oBACIJ,OAAA;IAAAS,QAAA,EAAS;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AAGpC;AAACX,EAAA,CAxBQD,IAAI;EAAA,QAEOH,UAAU;AAAA;AAAAgB,EAAA,GAFrBb,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}