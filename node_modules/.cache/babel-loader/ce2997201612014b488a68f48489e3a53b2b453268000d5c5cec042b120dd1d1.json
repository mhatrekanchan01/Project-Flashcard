{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/FillDeckForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { createDeck } from \"../../utils/api/index\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport DeckList from \"./DeckList\";\nimport SingleDeckView from \"./SingleDeckView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateDeckForm(_ref) {\n  _s();\n  let {\n    currentDeck,\n    singleDeck\n  } = _ref;\n  const {\n    path,\n    url\n  } = useRouteMatch;\n  const history = useHistory();\n  /* set initial form properties to blank value */\n  const initialFormState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setformData] = useState({\n    ...initialFormState\n  }); /* Set form state to blank object*/\n\n  /* add new formdata to existing data */\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setformData({\n      ...formData,\n      [target.name]: target.value\n    });\n    console.log(target.name);\n  };\n\n  //   \n\n  /* handle submit event */\n\n  async function handleSubmit(event) {\n    event.preventDefault(); /* prevents page refresh */\n    const response = await createDeck({\n      ...formData\n    });\n    console.log(\"Submitted:\", formData);\n    setformData(response);\n    setformData({\n      ...initialFormState\n    });\n    history.push(\"/decks/:deckId\");\n    event.target.reset();\n  }\n  const readDeck = () => {\n    console.log(\"Poo\");\n  };\n\n  //const handleSubmit = (event) => {\n  //  event.preventDefault();\n  //  console.log(\"Submitted:\", formData);\n\n  // setformData({...initialFormState});\n  //}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                for: \"exampleFormControlInput1\",\n                children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"exampleFormControlInput1\",\n                  type: \"text\",\n                  name: \"name\",\n                  className: \"container-fluid\",\n                  placeholder: \"Deck Name\",\n                  onChange: handleChange,\n                  value: formData.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                for: \"exampleFormControlTextarea1\",\n                children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"exampleFormControlTextarea1\",\n                  type: \"text\",\n                  name: \"description\",\n                  className: \"container-fluid\",\n                  rows: \"3\",\n                  placeholder: \"Brief description of the deck\",\n                  onChange: handleChange,\n                  value: formData.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                value: \"Cancel\",\n                className: \"btn btn-secondary btn-lg\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                value: \"Submit\",\n                className: \"btn btn-primary btn-lg\",\n                onClick: () => readDeck(currentDeck),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CreateDeckForm, \"6yldusUPQA3KjtDJILJ1sgQEr/0=\", false, function () {\n  return [useHistory];\n});\n_c = CreateDeckForm;\nexport default CreateDeckForm;\nvar _c;\n$RefreshReg$(_c, \"CreateDeckForm\");","map":{"version":3,"names":["React","useState","useEffect","createDeck","useHistory","useRouteMatch","DeckList","SingleDeckView","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateDeckForm","_ref","_s","currentDeck","singleDeck","path","url","history","initialFormState","name","description","formData","setformData","handleChange","_ref2","target","value","console","log","handleSubmit","event","preventDefault","response","push","reset","readDeck","children","onSubmit","className","htmlFor","for","id","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/FillDeckForm.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport {createDeck} from \"../../utils/api/index\"\nimport { useHistory, useRouteMatch} from \"react-router-dom\";\nimport DeckList from \"./DeckList\";\nimport SingleDeckView from \"./SingleDeckView\";\n\nfunction CreateDeckForm({currentDeck, singleDeck}){\n  const {path, url} = useRouteMatch;\n    const history = useHistory(); \n    /* set initial form properties to blank value */\n    const initialFormState = { \n        name: \"\",\n        description: \"\",\n      };\n    const [formData, setformData] = useState({ ...initialFormState }); /* Set form state to blank object*/\n      \n    /* add new formdata to existing data */\n    const handleChange = ({ target }) => {\n     setformData({\n        ...formData,\n         [target.name]: target.value,\n      });\n      console.log(target.name);\n     };\n    \n   //   \n\n /* handle submit event */\n\n\n   async function handleSubmit(event){\n    event.preventDefault();  /* prevents page refresh */\n  const response = await createDeck({...formData});\n  console.log(\"Submitted:\", formData);\n    setformData(response);\n    setformData({...initialFormState});\n    history.push(\"/decks/:deckId\");\n    event.target.reset();\n\n }\n\n const readDeck = () => {\n    console.log(\"Poo\")\n    \n}\n\n\n  //const handleSubmit = (event) => {\n  //  event.preventDefault();\n//  console.log(\"Submitted:\", formData);\n\n   // setformData({...initialFormState});\n  //}\n\n    return (\n        <>\n        <div>\n        <form onSubmit={handleSubmit} >\n                <table>\n                    <tr>\n                            <div className=\"form-group\" >\n                                <label htmlFor=\"name\" for=\"exampleFormControlInput1\">\n                                    Name\n                                    <input\n                                    id=\"exampleFormControlInput1\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    className=\"container-fluid\"\n                                    placeholder=\"Deck Name\"\n                                    onChange={handleChange}\n                                    value={formData.name}    \n                                    />   \n                                </label>\n                            </div>    \n                    </tr>\n                    <tr>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\" for=\"exampleFormControlTextarea1\">\n                                    Description\n                                    <textarea\n                                    id=\"exampleFormControlTextarea1\"\n                                    type=\"text\"\n                                    name=\"description\"\n                                    className=\"container-fluid\" rows=\"3\"\n                                    placeholder=\"Brief description of the deck\"   \n                                    onChange={handleChange}\n                                    value={formData.description}\n                                /> \n                                </label>\n                            </div>    \n                    </tr>\n                    <tr>\n                        <td>\n                        <button type=\"button\" value=\"Cancel\" className=\"btn btn-secondary btn-lg\">Cancel</button>\n                        <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-lg\" onClick={() => readDeck(currentDeck)} >Submit</button>\n\n                        </td>\n                    </tr>\n                </table>\n                \n   \n            </form> \n\n           \n        </div>\n        </>\n    )\n}\n\n\nexport default CreateDeckForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}