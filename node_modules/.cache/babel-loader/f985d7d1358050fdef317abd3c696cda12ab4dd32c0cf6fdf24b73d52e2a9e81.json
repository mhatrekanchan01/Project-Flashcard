{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/CreateDeck/CreateDeckForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, createDeck, readDeck, updateDeck } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateDeckForm() {\n  _s();\n  const initialFormState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setformData] = useState({\n    ...initialFormState\n  }); /* Set form state to blank array*/\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setformData({\n      ...formData,\n      [target.name]: target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Submitted:\", formData);\n    setformData({\n      ...initialFormState\n    });\n    event.target.reset();\n  };\n  function Print() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: formData.map((currentValue, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: currentValue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Deck Name\",\n        onChange: handleChange,\n        value: formData.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Brief description of the deck\",\n        onChange: handleChange,\n        value: formData.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateDeckForm, \"u5Fy1Yqq3yjf8l9BJpQEFCuJagw=\");\n_c = CreateDeckForm;\nexport default CreateDeckForm;\nvar _c;\n$RefreshReg$(_c, \"CreateDeckForm\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","createDeck","readDeck","updateDeck","jsxDEV","_jsxDEV","CreateDeckForm","_s","initialFormState","name","description","formData","setformData","handleChange","_ref","target","value","handleSubmit","event","preventDefault","console","log","reset","Print","children","map","currentValue","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/CreateDeck/CreateDeckForm.js"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport {listDecks, createDeck, readDeck, updateDeck} from \"../../utils/api/index\"\n\nfunction CreateDeckForm(){\n    const initialFormState = {\n        name: \"\",\n        description: \"\",\n      };\n    const [formData, setformData] = useState({ ...initialFormState }); /* Set form state to blank array*/\n    const handleChange = ({ target }) => {\n        setformData({\n          ...formData,\n          [target.name]: target.value,\n        });\n      };\n    \n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"Submitted:\", formData);\n        setformData({ ...initialFormState });\n        event.target.reset();\n      };\n\n      function Print(){\n        return(\n            <ul>\n                {formData.map((currentValue, index)=> (\n                    <li key={index}>{currentValue}</li>\n                ))}\n            </ul>\n        )\n      }\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n              <label htmlFor=\"name\">\n              Name\n            <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Deck Name\"\n                onChange={handleChange}\n                value={formData.value}\n                \n            />   \n            </label>\n            <label htmlFor=\"description\">\n            Description\n            <textarea\n                id=\"description\"\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Brief description of the deck\"\n                onChange={handleChange}\n                value={formData.value}\n                \n            />   \n            \n            <button>Cancel</button>\n            <button type=\"submit\" value=\"Submit\">Submit</button>\n            </label>\n\n        </form>\n    )\n}\n\n\nexport default CreateDeckForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}