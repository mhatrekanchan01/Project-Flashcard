{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, createDeck, readDeck, updateDeck } from \"../../utils/api/index\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deck() {\n  _s();\n  const [deckListing, setDeckListing] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function deckDashBoard() {\n      try {\n        const fetch = await listDecks([...deckListing], {\n          signal: abortController.signal\n        });\n        setDeckListing(fetch);\n        console.log(deckListing);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n          console.log(\"Aborted\", userID);\n        } else {\n          throw error;\n        }\n      }\n    }\n    deckDashBoard();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Deck\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Deck, \"1g8H1QAOBsPqlqvamiKwjdl6Z1Y=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","createDeck","readDeck","updateDeck","useHistory","jsxDEV","_jsxDEV","Deck","_s","deckListing","setDeckListing","abortController","AbortController","deckDashBoard","fetch","signal","console","log","error","name","userID","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {listDecks, createDeck, readDeck, updateDeck} from \"../../utils/api/index\"\nimport {useHistory} from \"react-router-dom\";\n\nfunction Deck(){\n\n    const [deckListing, setDeckListing] = useState([]);\n\n   useEffect(() => {\n    const abortController = new AbortController();\n\n    async function deckDashBoard(){\n        try{\n            const fetch = await listDecks([...deckListing], { signal: abortController.signal });\n            setDeckListing(fetch);\n            console.log(deckListing);\n        }catch (error) {\n            if (error.name === \"AbortError\") {\n              // Ignore `AbortError`\n              console.log(\"Aborted\", userID);\n            } else {\n              throw error;\n            }\n          }\n    }\n    deckDashBoard();\n   }\n   , []) \n\n\n    return (\n        <div>\n                Deck\n\n        </div>\n    )\n}\n\n\nexport default Deck;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,QAAO,uBAAuB;AACjF,SAAQC,UAAU,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAEX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACf,MAAMa,eAAe,GAAG,IAAIC,eAAe,EAAE;IAE7C,eAAeC,aAAaA,CAAA,EAAE;MAC1B,IAAG;QACC,MAAMC,KAAK,GAAG,MAAMd,SAAS,CAAC,CAAC,GAAGS,WAAW,CAAC,EAAE;UAAEM,MAAM,EAAEJ,eAAe,CAACI;QAAO,CAAC,CAAC;QACnFL,cAAc,CAACI,KAAK,CAAC;QACrBE,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;MAC5B,CAAC,QAAOS,KAAK,EAAE;QACX,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;UAC/B;UACAH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEG,MAAM,CAAC;QAChC,CAAC,MAAM;UACL,MAAMF,KAAK;QACb;MACF;IACN;IACAL,aAAa,EAAE;EAChB,CAAC,EACC,EAAE,CAAC;EAGJ,oBACIP,OAAA;IAAAe,QAAA,EAAK;EAGL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEd;AAACjB,EAAA,CAhCQD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAmCb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}