{"ast":null,"code":"var _jsxFileName = \"/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, createDeck, readDeck, updateDeck } from \"../../utils/api/index\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Deck() {\n  _s();\n  const [deckListing, setDeckListing] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const changeView = () => setVisible(!visible);\n  useEffect(() => {\n    async function deckDashBoard() {\n      const fetch = await listDecks();\n      setDeckListing(fetch);\n    }\n    deckDashBoard();\n  }, []);\n  console.log(deckListing);\n  function DeckMap() {\n    return deckListing.map((currentDeck, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"card-title\",\n                  children: currentDeck.name\n                }, currentDeck.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: `${currentDeck.cards.length}`\n                }, currentDeck.cards.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 39\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"card-text\",\n                  children: `${currentDeck.description}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${currentDeck.id}`,\n                type: \"button\",\n                class: \"btn btn-secondary\",\n                children: \" View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${currentDeck.id}/study`,\n                type: \"button\",\n                class: \"btn btn-primary\",\n                children: \"Study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }, this)\n      }, void 0, false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(DeckMap, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 17\n  }, this);\n}\n_s(Deck, \"Wzqr2bvFlZIC41WXnSHnYAffmtI=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","createDeck","readDeck","updateDeck","useHistory","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Deck","_s","deckListing","setDeckListing","visible","setVisible","changeView","deckDashBoard","fetch","console","log","DeckMap","map","currentDeck","index","children","class","name","id","fileName","_jsxFileName","lineNumber","columnNumber","cards","length","description","to","type","_c","$RefreshReg$"],"sources":["/Users/kanchanmhatre/Thinkful/Project_Flashcards_Qualified_1/src/components/Deck/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {listDecks, createDeck, readDeck, updateDeck} from \"../../utils/api/index\"\nimport {useHistory, Link} from \"react-router-dom\";\n\nfunction Deck(){\n\n    const [deckListing, setDeckListing] = useState([]);\n    const [visible, setVisible] = useState(false);\n\n    const changeView = () => setVisible(!visible)\n\n   useEffect(() => {\n\n    async function deckDashBoard(){\n            const fetch = await listDecks();\n            setDeckListing(fetch);  \n        }\n    deckDashBoard();\n    }, [])\n\n\n\n    console.log(deckListing); \n\n    function DeckMap(){\n        return (deckListing.map((currentDeck, index) => {\n                  return (\n\n                    <>\n                      <div>\n                      \n                      <table>\n                          <thead>\n                                  <tr key={index}>\n                                      <th key={currentDeck.id} class=\"card-title\">{currentDeck.name}</th>\n                                      <th key={currentDeck.cards.id}>{`${currentDeck.cards.length}`}</th>\n                                  </tr>\n                          </thead>\n                          <tbody>\n\n                            \n                              <tr>\n                                  <td class=\"card-text\">\n                                  {`${currentDeck.description}`}\n                                  </td>\n                              </tr>\n                              </tbody>\n                        </table>      \n                              <tr>\n                                  <td>\n                                      <Link to={`/decks/${currentDeck.id}`} type=\"button\" class=\"btn btn-secondary\"> View</Link>\n                                  </td>\n                                  <td>\n                                      <Link to={`/decks/${currentDeck.id}/study`} type=\"button\" class=\"btn btn-primary\">Study</Link>\n                                  </td>\n                                  <td>\n                                      <button>Delete</button>\n                                      \n                                  </td>\n                              </tr>      \n                  </div>\n              </>\n                )\n              \n         })\n         )}\n\n\n    return (\n        \n                <DeckMap />\n\n        \n    )\n}\n\n\nexport default Deck;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}